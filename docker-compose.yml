services:

  eureka-server:
    build: ./eureka-server
    container_name: eureka-server
    ports:
      - "8761:8761"
    depends_on:
      - mysql
      - kafka
      - zipkin
    networks:
      - app-net

  api-gateway:
    build: ./api-gateway
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      - USER_SERVICE_URL=http://user-service:8084/auth
    depends_on:
      - eureka-server
    networks:
      - app-net

  product-service:
    build: ./product-service
    container_name: product-service
    ports:
      - "8081:8081"
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/ecommerce
      - DB_USERNAME=ecommerce_user
      - DB_PASSWORD=ecommerce_pass
    depends_on:
      - eureka-server
    networks:
      - app-net

  inventory-service:
    build: ./inventory-service
    container_name: inventory-service
    ports:
      - "8082:8082"
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/ecommerce
      - DB_USERNAME=ecommerce_user
      - DB_PASSWORD=ecommerce_pass
    depends_on:
      - eureka-server
    networks:
      - app-net

  order-service:
    build: ./order-service
    container_name: order-service
    ports:
      - "8083:8083"
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/ecommerce
      - DB_USERNAME=ecommerce_user
      - DB_PASSWORD=ecommerce_pass
    depends_on:
      - eureka-server
    networks:
      - app-net

  user-service:
    build: ./user-service
    container_name: user-service
    ports:
      - "8084:8084"
    environment:
      - DB_URL=jdbc:mysql://mysql:3306/ecommerce
      - DB_USERNAME=ecommerce_user
      - DB_PASSWORD=ecommerce_pass
      - JWT_SECRET=388fda9f2b43fd6d6314d810a8c10ab1d9b673373a7a966ef577f05bb162f5a7
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
    depends_on:
      - eureka-server
    networks:
      - app-net

  notification-service:
    build: ./notification-service
    container_name: notification-service
    ports:
      - "8085:8085"
    environment:
      - MAIL_HOST=${MAIL_HOST}
      - MAIL_PORT=${MAIL_PORT}
      - MAIL_USERNAME=${MAIL_USERNAME}
      - MAIL_PASSWORD=${MAIL_PASSWORD}
      - MAIL_ADMIN=${MAIL_ADMIN}
    depends_on:
      - eureka-server
    networks:
      - app-net

  mysql:
    image: mysql:8
    container_name: mysql
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: ecommerce
      MYSQL_USER: ecommerce_user
      MYSQL_PASSWORD: ecommerce_pass
    ports:
      - "3307:3306"
    volumes:
      - db-data:/var/lib/mysql
    networks:
      - app-net

  fluentbit:
    image: fluent/fluent-bit:2.2
    container_name: fluentbit
    volumes:
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - ./fluentbit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf
    depends_on:
      - elasticsearch
    networks:
      - app-net

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.0
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
    networks:
      - app-net

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.0
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    networks:
      - app-net

  zipkin:
    image: openzipkin/zipkin:2.24.3
    container_name: zipkin
    ports:
      - "9411:9411"
    networks:
      - app-net

  prometheus:
    image: prom/prometheus:v2.53.4
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
    networks:
      - app-net

  grafana:
    image: grafana/grafana:12.0.2
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    networks:
      - app-net

  kafka:
    image: apache/kafka:4.0.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,CONTROLLER://0.0.0.0:9093
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_NUM_PARTITIONS: 3
    networks:
      - app-net

volumes:
  db-data:

networks:
  app-net:
